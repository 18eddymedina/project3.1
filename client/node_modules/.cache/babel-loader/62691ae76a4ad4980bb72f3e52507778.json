{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\billy\\\\Downloads\\\\11-Stu_ReactRouter_Solved\\\\Solved\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nvar div1 = document.createElement(\"p\");\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      author: \"\"\n    };\n\n    _this.getAllBooks = function () {\n      API.getBooks().then(function (res, req) {\n        res.data.forEach(function (element) {\n          console.log(element.author);\n          div1.appendChild(element.author);\n        });\n        console.log(res);\n      });\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          author: \"\"\n        });\n      } // res.data.forEach(element => {\n      //   console.log(element.author);\n      // });\n      // console.log(res);\n      ).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.author) {\n        API.saveBook({\n          author: _this.state.author\n        }).then(function (res) {\n          return _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.author,\n        onChange: this.handleInputChange,\n        name: \"author\",\n        placeholder: \"Your Contribution ;-) (160 characters max)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.author,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Submit Book\"))), React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"The Story So Far...\")))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\ngetAllBooks();\nexport default Books;","map":{"version":3,"sources":["C:\\Users\\billy\\Downloads\\11-Stu_ReactRouter_Solved\\Solved\\client\\src\\pages\\Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","FormBtn","div1","document","createElement","Books","state","books","author","getAllBooks","getBooks","then","res","req","data","forEach","element","console","log","appendChild","loadBooks","setState","catch","err","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveBook"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,oBAA/B;AAGA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAX;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAURC,W,GAAY,YAAI;AACdhB,MAAAA,GAAG,CAACiB,QAAJ,GAAeC,IAAf,CAAoB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACtCD,QAAAA,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,UAAAC,OAAO,EAAI;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACR,MAApB;AACAN,UAAAA,IAAI,CAACiB,WAAL,CAAiBH,OAAO,CAACR,MAAzB;AAED,SAJD;AAMAS,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACD,OARD;AAUD,K;;UAGDQ,S,GAAY,YAAM;AAChB3B,MAAAA,GAAG,CAACiB,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKS,QAAL,CAAc;AAAEd,UAAAA,KAAK,EAAEK,GAAG,CAACE,IAAb;AAAmBN,UAAAA,MAAM,EAAE;AAA3B,SAAd,CADO;AAAA,OADX,CAGI;AACA;AACA;AACA;AANJ,QAQGc,KARH,CAQS,UAAAC,GAAG;AAAA,eAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ;AAAA,OARZ;AASD,K;;UAGDC,U,GAAa,UAAAC,EAAE,EAAI;AACjBhC,MAAAA,GAAG,CAAC+B,UAAJ,CAAeC,EAAf,EACGd,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAKQ,SAAL,EAAJ;AAAA,OADX,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K;;UAEDG,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKT,QAAL,qBACGQ,IADH,EACUC,KADV;AAGD,K;;UAEDC,gB,GAAmB,UAAAJ,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;;AACA,UAAI,MAAK1B,KAAL,CAAWE,MAAf,EAAuB;AACrBf,QAAAA,GAAG,CAACwC,QAAJ,CAAa;AACXzB,UAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWE;AADR,SAAb,EAGGG,IAHH,CAGQ,UAAAC,GAAG;AAAA,iBAAI,MAAKQ,SAAL,EAAJ;AAAA,SAHX,EAIGE,KAJH,CAIS,UAAAC,GAAG;AAAA,iBAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ;AAAA,SAJZ;AAKD;AACF,K;;;;;;;wCArDmB;AAClB,WAAKH,SAAL;AACD;;;6BAoDQ;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWE,MADpB;AAEE,QAAA,QAAQ,EAAE,KAAKkB,iBAFjB;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,WAAW,EAAC,4CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,CAAE,KAAKpB,KAAL,CAAWE,MADzB;AAEE,QAAA,OAAO,EAAE,KAAKuB,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,CAJF,CADF,EAsBE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,CAtBF,CADF,CADF;AA4CD;;;;EA1GiBzC,S;;AA4GpBmB,WAAW;AAEX,eAAeJ,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\n\r\n\r\nvar div1 = document.createElement(\"p\");\r\n\r\nclass Books extends Component {\r\n  state = {\r\n    books: [],\r\n    author: \"\",\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  getAllBooks=()=>{\r\n    API.getBooks().then(function (res, req) {\r\n      res.data.forEach(element => {\r\n        console.log(element.author);\r\n        div1.appendChild(element.author);\r\n    \r\n      });\r\n    \r\n      console.log(res);\r\n    }\r\n    )\r\n  }\r\n\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res =>\r\n        this.setState({ books: res.data, author: \"\" })\r\n        // res.data.forEach(element => {\r\n        //   console.log(element.author);\r\n        // });\r\n        // console.log(res);\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n  deleteBook = id => {\r\n    API.deleteBook(id)\r\n      .then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.author) {\r\n      API.saveBook({\r\n        author: this.state.author,\r\n      })\r\n        .then(res => this.loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>What Books Should I Read?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n\r\n              <Input\r\n                value={this.state.author}\r\n                onChange={this.handleInputChange}\r\n                name=\"author\"\r\n                placeholder=\"Your Contribution ;-) (160 characters max)\"\r\n              />\r\n\r\n              <FormBtn\r\n                disabled={!(this.state.author)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit Book\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>The Story So Far...</h1>\r\n            </Jumbotron>\r\n\r\n\r\n            {/* <List>\r\n              {this.state.books.map(book => (\r\n                <ListItem key={book._id}>\r\n                  <p>\r\n                    {book.author}\r\n                  </p>\r\n                </ListItem>\r\n              ))}\r\n            </List> */}\r\n\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\ngetAllBooks();\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}